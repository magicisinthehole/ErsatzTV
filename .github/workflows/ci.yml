name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  calculate_version:
    name: Calculate version information
    runs-on: ubuntu-latest
    outputs:
      git_tag: ${{ steps.vars.outputs.git_tag }}
      artifacts_version: ${{ steps.vars.outputs.artifacts_version }}
      info_version: ${{ steps.vars.outputs.info_version }}
    steps:
      - name: Get the sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: vars
        name: Extract versions
        shell: bash
        run: |
          tag="$(git describe --tags --abbrev=0)"
          short="$(git rev-parse --short HEAD)"
          tag_no_v="${tag:1}"
          echo "git_tag=${tag_no_v}-${short}" >> "$GITHUB_OUTPUT"
          echo "artifacts_version=${tag}-${short}" >> "$GITHUB_OUTPUT"
          echo "info_version=${tag_no_v}" >> "$GITHUB_OUTPUT"

  # Upstream-only artifacts (requires Apple signing secrets). Skip in your fork.
  build_and_upload:
    if: ${{ github.repository == 'ErsatzTV/ErsatzTV' && secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
    uses: ersatztv/ersatztv/.github/workflows/artifacts.yml@main
    needs: calculate_version
    with:
      release_tag: develop
      release_version: ${{ needs.calculate_version.outputs.artifacts_version }}
      info_version: ${{ needs.calculate_version.outputs.info_version }}
    secrets:
      apple_developer_certificate_p12_base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
      apple_developer_certificate_password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      ac_username: ${{ secrets.AC_USERNAME }}
      ac_password: ${{ secrets.AC_PASSWORD }}
      gh_token: ${{ secrets.GITHUB_TOKEN }}

  # Docker Hub build (only runs if Docker Hub secrets exist).
  build_images:
    if: ${{ secrets.DOCKER_HUB_USERNAME && secrets.DOCKER_HUB_ACCESS_TOKEN }}
    uses: ersatztv/ersatztv/.github/workflows/docker.yml@main
    needs: calculate_version
    with:
      base_version: develop
      info_version: ${{ needs.calculate_version.outputs.git_tag }}
      tag_version: ${{ github.sha }}
    secrets:
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_access_token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # ✅ GHCR build/push — this publishes the tag your compose pulls.
  build_images_ghcr:
    name: Build & push (GHCR)
    needs: calculate_version
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ersatztv:scale-support
            ghcr.io/${{ github.repository_owner }}/ersatztv:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
